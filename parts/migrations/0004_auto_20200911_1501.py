# Generated by Django 3.1.1 on 2020-09-11 18:01

import django.core.validators
from django.db import migrations, models
import parts.models


class Migration(migrations.Migration):

    dependencies = [
        ("parts", "0003_auto_20200904_1808"),
    ]

    operations = [
        migrations.AddField(
            model_name="part",
            name="full_code",
            field=models.CharField(
                blank=True, editable=False, max_length=10, unique=True
            ),
        ),
        migrations.AddField(
            model_name="purchaseassembly",
            name="parts_contained",
            field=models.TextField(blank=True, editable=False),
        ),
        migrations.AlterField(
            model_name="part",
            name="code",
            field=models.PositiveIntegerField(
                default=parts.models.Part.Part.get_next_part_code,
                help_text="5 digit TG code.",
                validators=[
                    django.core.validators.RegexValidator(
                        code="nomatch",
                        message="Code has to be 5 digits long.",
                        regex="^\\d{5}$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="part",
            name="comments",
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name="part",
            name="dimension",
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name="part",
            name="name",
            field=models.CharField(max_length=150),
        ),
        migrations.AlterField(
            model_name="part",
            name="revision_notes",
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name="purchaseassembly",
            name="code",
            field=models.PositiveIntegerField(
                default=parts.models.PurchaseAssembly.PurchaseAssembly.get_next_purchase_assembly_code,
                help_text="PA code without the A prefix.",
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        code="nomatch",
                        message="Code has to be 7 digits long.",
                        regex="^\\d{7}$",
                    )
                ],
            ),
        ),
    ]
